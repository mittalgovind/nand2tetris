// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);

    And(a=notsel0, b=notsel1, out=tempa );
    And(a=tempa, b=notsel2, out=outa);
    And(a=tempa, b=sel[2], out=oute);
    
    And(a=sel[0], b=notsel1, out=tempb);
    And(a=tempb, b=notsel2, out=outb);
    And(a=tempb, b=sel[2], out=outf);

    And(a=notsel0, b=sel[1], out=tempc );
    And(a=tempc, b=notsel2, out=outc);
    And(a=tempc, b=sel[2], out=outg);
    
    And(a=sel[0], b=sel[1], out=tempd );
    And(a=tempd, b=notsel2, out=outd);
    And(a=tempd, b=sel[2], out=outh);
    

    And(a=in, b=outa, out=a);
    And(a=in, b=outb, out=b);
    And(a=in, b=outc, out=c);
    And(a=in, b=outd, out=d);
    And(a=in, b=oute, out=e);
    And(a=in, b=outf, out=f);
    And(a=in, b=outg, out=g);
    And(a=in, b=outh, out=h);

}