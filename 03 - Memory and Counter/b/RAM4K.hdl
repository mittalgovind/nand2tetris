// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address[9..11], a=t0, b=t1, c=t2, d=t3, e=t4, f=t5, g=t6, h=t7);
    And(a=t0, b=load, out=load0);
    And(a=t1, b=load, out=load1);
    And(a=t2, b=load, out=load2);
    And(a=t3, b=load, out=load3);
    And(a=t4, b=load, out=load4);
    And(a=t5, b=load, out=load5);
    And(a=t6, b=load, out=load6);
    And(a=t7, b=load, out=load7);
    RAM512(in=in, load=load0, address=address[0..8], out=temp0);
    RAM512(in=in, load=load1, address=address[0..8], out=temp1);
    RAM512(in=in, load=load2, address=address[0..8], out=temp2);
    RAM512(in=in, load=load3, address=address[0..8], out=temp3);
    RAM512(in=in, load=load4, address=address[0..8], out=temp4);
    RAM512(in=in, load=load5, address=address[0..8], out=temp5);
    RAM512(in=in, load=load6, address=address[0..8], out=temp6);
    RAM512(in=in, load=load7, address=address[0..8], out=temp7);
    Mux8Way16(a=temp0, b=temp1, c=temp2, d=temp3, e=temp4, f=temp5, g=temp6, h=temp7, sel=address[9..11], out=out);
}